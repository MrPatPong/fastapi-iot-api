version: '3'

services:
  web:
    build: 
      context: . 
      dockerfile: Dockerfile.web
    container_name: myfastapi
    command: sh -c "uvicorn main:app --reload --port=8000 --host=0.0.0.0"
    # env_file: # changes to .env file require rebuilding of image
    #   - .env
    ports:
      - "8000:8000"
    volumes:
      - .:/code
    depends_on:
      - mongo
      - influx
    extra_hosts:
      - "localhost:host-gateway"


  mongo:
    image: mongo:latest
    restart: always
    container_name: mongodb
    ports:
      - 27023:27017
    volumes:
      - mongodata:/data/db

  influx:
    image: influxdb:2
    restart: always
    container_name: influx
    ports:
      - 8086:8086
    volumes:
      - /mnt/influxdb/data:/var/lib/influxdb2:rw
    # environment:
    #   DOCKER_INFLUXDB_INIT_MODE: setup
    #   DOCKER_INFLUXDB_INIT_USERNAME_FILE: /run/secrets/influxdb2-admin-username
    #   DOCKER_INFLUXDB_INIT_PASSWORD_FILE: /run/secrets/influxdb2-admin-password
    #   DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE: /run/secrets/influxdb2-admin-token
    #   DOCKER_INFLUXDB_INIT_ORG: docs
    #   DOCKER_INFLUXDB_INIT_BUCKET: home
    # secrets:
    #   - influxdb2-admin-username
    #   - influxdb2-admin-password
    #   - influxdb2-admin-token
    # volumes:
    #   - type: volume
    #     source: influxdb2-data
    #     target: /var/lib/influxdb2
    #   - type: volume
    #     source: influxdb2-config
    #     target: /etc/influxdb2

  node-red:
    build: 
      context: .
      dockerfile: Dockerfile.nodered
    container_name: nodered
    # environment:
    #   - TZ=Europe/Amsterdam
    ports:
      - "1880:1880"
    # networks:
    #   - node-red-net
    volumes:
      - node-red-data:/data

# secrets:
#   influxdb2-admin-username:
#     file: ~/.env.influxdb2-admin-username
#   influxdb2-admin-password:
#     file: ~/.env.influxdb2-admin-password
#   influxdb2-admin-token:
#     file: ~/.env.influxdb2-admin-token

volumes:
  mongodata:
  node-red-data:
  influxdb2-data:
  influxdb2-config: